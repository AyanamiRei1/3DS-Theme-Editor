<Window
    x:Class="ThemeEditor.WPF.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:ThemeEditor.WPF.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:ThemeEditor.WPF"
    xmlns:locale="clr-namespace:ThemeEditor.WPF.Localization"
    xmlns:markup="clr-namespace:ThemeEditor.WPF.Markup"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:templating="clr-namespace:ThemeEditor.WPF.Templating"
    xmlns:themes="clr-namespace:ThemeEditor.WPF.Themes"
    xmlns:wpfx="http://schemas.xceed.com/wpf/xaml/toolkit"
    Width="1200"
    Height="600"
    d:DataContext="{d:DesignInstance local:MainWindow}"
    Closed="MainWindow_OnClosed"
    Loaded="MainWindow_OnLoaded"
    ResizeMode="CanMinimize"
    SnapsToDevicePixels="True"
    UseLayoutRounding="True"
    mc:Ignorable="d">
    <Window.Title>
        <Binding
            Path="ThemePath"
            RelativeSource="{RelativeSource Self}"
            StringFormat="{x:Static local:MainWindow.WINDOW_TITLE_FORMAT}"
            TargetNullValue="{x:Static local:MainWindow.WINDOW_TITLE}" />
    </Window.Title>
    <Window.Resources>
        <templating:BooleanConverter x:Key="BooleanToOpacityConverter">
            <templating:BooleanConverter.TrueValue>
                <system:Double>1.0</system:Double>
            </templating:BooleanConverter.TrueValue>
            <templating:BooleanConverter.FalseValue>
                <system:Double>0.25</system:Double>
            </templating:BooleanConverter.FalseValue>
        </templating:BooleanConverter>
        <templating:PropertyListConverter x:Key="ViewModelUnroller" />
        <templating:DynamicTemplateSelector x:Key="TemplateSelector" />
        <templating:ValueConverterGroup x:Key="PathToFileNameConverterL1">
            <templating:PathToFileNameConverter Level="1" />
            <templating:EscapeStringUnderscoreCoverter />

        </templating:ValueConverterGroup>
        <Style
            x:Key="PropertyListControlStyle"
            TargetType="ItemsControl">
            <Style.Resources>
                <templating:ColorItemConverter x:Key="ColorItemConverter" />
                <Style TargetType="{x:Type wpfx:ColorPicker}">
                    <Setter Property="AvailableColorsHeader" Value="{x:Static locale:MainResources.Control_ColorPicker_TopPalette}" />
                    <Setter Property="AvailableColors">
                        <Setter.Value>
                            <Binding
                                Converter="{StaticResource ColorItemConverter}"
                                Path="ViewModel.Textures.Top.Palette"
                                RelativeSource="{RelativeSource FindAncestor,
                                                                AncestorType=Window}" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="StandardColorsHeader" Value="{x:Static locale:MainResources.Control_ColorPicker_BottomPalette}" />
                    <Setter Property="StandardColors">
                        <Setter.Value>
                            <Binding
                                Converter="{StaticResource ColorItemConverter}"
                                Path="ViewModel.Textures.Bottom.Palette"
                                RelativeSource="{RelativeSource FindAncestor,
                                                                AncestorType=Window}" />
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.Resources>
            <Setter Property="ItemTemplateSelector" Value="{StaticResource TemplateSelector}" />
            <Setter Property="templating:DynamicTemplateSelector.Templates">
                <Setter.Value>
                    <templating:TemplateCollection>
                        <templating:Template
                            DataTemplate="{StaticResource ColorDataTemplate}"
                            PropertyName="Value"
                            PropertyType="{x:Type Color}" />
                        <templating:Template
                            DataTemplate="{StaticResource BoolDataTemplate2}"
                            PropertyName="Value"
                            PropertyType="{x:Type system:Boolean}" />
                        <templating:Template
                            DataTemplate="{StaticResource FloatDataTemplate}"
                            PropertyName="Value"
                            PropertyType="{x:Type system:Double}" />
                    </templating:TemplateCollection>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
            x:Key="PropertyControlStyle"
            TargetType="ContentControl">
            <Setter Property="ContentTemplateSelector" Value="{StaticResource TemplateSelector}" />
            <Setter Property="templating:DynamicTemplateSelector.Templates">
                <Setter.Value>
                    <templating:TemplateCollection>
                        <templating:Template
                            DataTemplate="{StaticResource BoolDataTemplate}"
                            PropertyName="Value"
                            PropertyType="{x:Type system:Boolean}" />
                        <templating:Template
                            DataTemplate="{StaticResource EnumDataTemplate}"
                            PropertyName="Value"
                            PropertyType="{x:Type system:Enum}" />
                    </templating:TemplateCollection>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
            x:Key="ColorsViewModelControlStyle"
            TargetType="ItemsControl">
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type templating:PropertyListConverter+PropertyProxy}">
                        <StackPanel
                            Margin="3,0"
                            Opacity="{Binding Path=Value.Enabled, Converter={StaticResource BooleanToOpacityConverter}}">
                            <TextBlock
                                FontWeight="Bold"
                                Text="{Binding Path=Name}" />
                            <TextBlock
                                FontStyle="Italic"
                                Text="{Binding Path=Description}" />
                            <StackPanel>
                                <ItemsControl
                                    Style="{StaticResource PropertyListControlStyle}"
                                    ItemsSource="{Binding Converter={StaticResource ViewModelUnroller}, Path=Value}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel>
                                                <WrapPanel.Width>
                                                    <Binding
                                                        Path="ViewportWidth"
                                                        RelativeSource="{RelativeSource FindAncestor,
                                                                                        AncestorType=ScrollViewer}" />
                                                </WrapPanel.Width>
                                            </WrapPanel>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </StackPanel>
                            <Separator Margin="3" />
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
            x:Key="FlagsItemsControlStyle"
            TargetType="ItemsControl">
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type templating:PropertyListConverter+PropertyProxy}">
                        <StackPanel Margin="3,0">
                            <UniformGrid Columns="2">
                                <TextBlock
                                    VerticalAlignment="Center"
                                    FontWeight="Bold"
                                    Text="{Binding Path=Name}"
                                    TextWrapping="Wrap" />
                                <ContentControl
                                    Style="{StaticResource PropertyControlStyle}"
                                    Content="{Binding Path=.}">
                                    <ContentControl.ToolTip>
                                        <TextBlock
                                            FontStyle="Italic"
                                            Text="{Binding Path=Description}"
                                            TextWrapping="Wrap" />
                                    </ContentControl.ToolTip>
                                </ContentControl>
                            </UniformGrid>
                            <Separator Margin="3" />
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="1">
                            <UniformGrid.Width>
                                <Binding
                                    Path="ViewportWidth"
                                    RelativeSource="{RelativeSource FindAncestor,
                                                                    AncestorType=ScrollViewer}" />
                            </UniformGrid.Width>
                        </UniformGrid>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ImageBrush
            x:Key="NoiseBackground"
            ImageSource="/ThemeEditor.WPF;component/Resources/BLACK_NOISE.png"
            TileMode="Tile"
            Viewbox="0,0,48,48"
            ViewboxUnits="Absolute"
            Viewport="0,0,48,48"
            ViewportUnits="Absolute" />
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding
            Key="{Binding Path=LoadThemeCommandWrapper.Gesture.Key}"
            Command="{Binding Path=LoadThemeCommandWrapper.Command}"
            Modifiers="{Binding Path=LoadThemeCommandWrapper.Gesture.Modifiers}" />
        <KeyBinding
            Key="{Binding Path=SaveThemeCommandWrapper.Gesture.Key}"
            Command="{Binding Path=SaveThemeCommandWrapper.Command}"
            Modifiers="{Binding Path=SaveThemeCommandWrapper.Gesture.Modifiers}" />
        <KeyBinding
            Key="{Binding Path=SaveAsThemeCommandWrapper.Gesture.Key}"
            Command="{Binding Path=SaveAsThemeCommandWrapper.Command}"
            Modifiers="{Binding Path=SaveAsThemeCommandWrapper.Gesture.Modifiers}" />
        <KeyBinding
            Key="{Binding Path=NewThemeCommandWrapper.Gesture.Key}"
            Command="{Binding Path=NewThemeCommandWrapper.Command}"
            Modifiers="{Binding Path=NewThemeCommandWrapper.Gesture.Modifiers}" />
    </Window.InputBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="500" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Menu Grid.Row="0">
                <MenuItem Header="{x:Static locale:MainResources.Menu_File}">
                    <MenuItem
                        Command="{Binding Path=NewThemeCommandWrapper.Command}"
                        Header="{x:Static locale:MainResources.Menu_File_New}"
                        InputGestureText="{Binding Path=NewThemeCommandWrapper.GestureText}" />
                    <MenuItem
                        Command="{Binding Path=LoadThemeCommandWrapper.Command}"
                        Header="{x:Static locale:MainResources.Menu_File_Open}"
                        InputGestureText="{Binding Path=LoadThemeCommandWrapper.GestureText}" />
                    <MenuItem
                        Header="Recent..."
                        ItemsSource="{Binding Path=RecentsList}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Header" Value="{Binding Path=., Converter={StaticResource PathToFileNameConverterL1}}" />
                                <Setter Property="ToolTip" Value="{Binding}" />
                                <Setter Property="Command" Value="{Binding Path=DataContext.LoadThemeCommandWrapper.Command, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}, AncestorLevel=1}}" />
                                <Setter Property="CommandParameter" Value="{Binding}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <Separator />
                    <MenuItem
                        Command="{Binding Path=SaveThemeCommandWrapper.Command}"
                        Header="{x:Static locale:MainResources.Menu_File_Save}"
                        InputGestureText="{Binding Path=SaveThemeCommandWrapper.GestureText}" />
                    <MenuItem
                        Command="{Binding Path=SaveAsThemeCommandWrapper.Command}"
                        Header="{x:Static locale:MainResources.Menu_File_SaveAs}"
                        InputGestureText="{Binding Path=SaveAsThemeCommandWrapper.GestureText}" />
                    <MenuItem Header="{x:Static locale:MainResources.Menu_File_SavePreview}">
                        <MenuItem
                            Command="{Binding Path=ExportPreviewCommand}"
                            CommandParameter="{x:Static local:PreviewKind.Top}"
                            Header="{x:Static locale:MainResources.Menu_File_SavePreview_Top}" />
                        <MenuItem
                            Command="{Binding Path=ExportPreviewCommand}"
                            CommandParameter="{x:Static local:PreviewKind.Bottom}"
                            Header="{x:Static locale:MainResources.Menu_File_SavePreview_Bottom}" />
                        <MenuItem
                            Command="{Binding Path=ExportPreviewCommand}"
                            CommandParameter="{x:Static local:PreviewKind.Both}"
                            Header="{x:Static locale:MainResources.Menu_File_SavePreview_Both}" />
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="{x:Static locale:MainResources.Menu_SendTo}">
                        <MenuItem StaysOpenOnClick="True">
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock
                                        Margin="0,0,6,0"
                                        VerticalAlignment="Center"
                                        Text="3DS IP:" />
                                    <TextBox
                                        Width="100"
                                        VerticalAlignment="Center"
                                        Text="{markup:Setting Path=SocketIP}" />
                                </StackPanel>
                            </MenuItem.Header>
                        </MenuItem>
                        <MenuItem
                            Command="{Binding Path=SendThemeCHMM2Command}"
                            CommandParameter="{markup:Setting Path=SocketIP}"
                            Header="CHMM2" />
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{x:Static locale:MainResources.Menu_Image}">
                    <MenuItem.Resources>
                        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                        <Style
                            x:Key="ImportStyle"
                            TargetType="{x:Type MenuItem}">
                            <Setter Property="Header" Value="{x:Static locale:MainResources.Menu_Image_Any_Load}" />
                            <Setter Property="Command" Value="{Binding Path=ReplaceImageCommand}" />
                        </Style>
                        <Style
                            x:Key="RemoveStyle"
                            TargetType="{x:Type MenuItem}">
                            <Setter Property="Header" Value="{x:Static locale:MainResources.Menu_Image_Any_Remove}" />
                            <Setter Property="Command" Value="{Binding Path=RemoveImageCommand}" />
                            <Setter Property="Visibility">
                                <Setter.Value>
                                    <Binding
                                        Converter="{StaticResource BooleanToVisibilityConverter}"
                                        Path="IsEnabled"
                                        RelativeSource="{RelativeSource Self}" />
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style
                            x:Key="ExportStyle"
                            TargetType="{x:Type MenuItem}">
                            <Setter Property="Header" Value="{x:Static locale:MainResources.Menu_Image_Any_Export}" />
                            <Setter Property="Command" Value="{Binding Path=ExportImageCommand}" />
                            <Setter Property="Visibility">
                                <Setter.Value>
                                    <Binding
                                        Converter="{StaticResource BooleanToVisibilityConverter}"
                                        Path="IsEnabled"
                                        RelativeSource="{RelativeSource Self}" />
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </MenuItem.Resources>
                    <MenuItem Header="{x:Static locale:MainResources.Menu_Image_Top}">
                        <MenuItem
                            Style="{StaticResource ImportStyle}"
                            CommandParameter="{x:Static local:TargetImage.Top}" />
                        <MenuItem
                            Style="{StaticResource RemoveStyle}"
                            CommandParameter="{x:Static local:TargetImage.Top}" />
                        <MenuItem
                            Style="{StaticResource ExportStyle}"
                            CommandParameter="{x:Static local:TargetImage.Top}" />
                        <Separator />
                        <MenuItem
                            Header="1024x256 (1008x240)"
                            IsEnabled="False" />
                        <MenuItem
                            Header="512x256 (412x240)"
                            IsEnabled="False" />
                        <MenuItem
                            Header="64x64"
                            IsEnabled="False" />
                    </MenuItem>
                    <MenuItem Header="{x:Static locale:MainResources.Menu_Image_TopStatic}">
                        <MenuItem
                            Style="{StaticResource ImportStyle}"
                            CommandParameter="{x:Static local:TargetImage.TopAlt}" />
                        <MenuItem
                            Style="{StaticResource RemoveStyle}"
                            CommandParameter="{x:Static local:TargetImage.TopAlt}" />
                        <MenuItem
                            Style="{StaticResource ExportStyle}"
                            CommandParameter="{x:Static local:TargetImage.TopAlt}" />
                        <Separator />
                        <MenuItem
                            Header="64x64"
                            IsEnabled="False" />
                    </MenuItem>
                    <MenuItem Header="{x:Static locale:MainResources.Menu_Image_Bottom}">
                        <MenuItem
                            Style="{StaticResource ImportStyle}"
                            CommandParameter="{x:Static local:TargetImage.Bottom}" />
                        <MenuItem
                            Style="{StaticResource RemoveStyle}"
                            CommandParameter="{x:Static local:TargetImage.Bottom}" />
                        <MenuItem
                            Style="{StaticResource ExportStyle}"
                            CommandParameter="{x:Static local:TargetImage.Bottom}" />
                        <Separator />
                        <MenuItem
                            Header="1024x256 (1008x240)"
                            IsEnabled="False" />
                        <MenuItem
                            Header="1024x256 (960x240)"
                            IsEnabled="False" />
                        <MenuItem
                            Header="512x256 (320x240)"
                            IsEnabled="False" />
                    </MenuItem>
                    <MenuItem Header="{x:Static locale:MainResources.Menu_Image_FileLarge}">
                        <MenuItem
                            Style="{StaticResource ImportStyle}"
                            CommandParameter="{x:Static local:TargetImage.FileLarge}" />
                        <MenuItem
                            Style="{StaticResource RemoveStyle}"
                            CommandParameter="{x:Static local:TargetImage.FileLarge}" />
                        <MenuItem
                            Style="{StaticResource ExportStyle}"
                            CommandParameter="{x:Static local:TargetImage.FileLarge}" />
                        <Separator />
                        <MenuItem
                            Header="64x128 (36x72)"
                            IsEnabled="False" />
                    </MenuItem>
                    <MenuItem Header="{x:Static locale:MainResources.Menu_Image_FileSmall}">
                        <MenuItem
                            Style="{StaticResource ImportStyle}"
                            CommandParameter="{x:Static local:TargetImage.FileSmall}" />
                        <MenuItem
                            Style="{StaticResource RemoveStyle}"
                            CommandParameter="{x:Static local:TargetImage.FileSmall}" />
                        <MenuItem
                            Style="{StaticResource ExportStyle}"
                            CommandParameter="{x:Static local:TargetImage.FileSmall}" />
                        <Separator />
                        <MenuItem
                            Header="32x64 (25x50)"
                            IsEnabled="False" />
                    </MenuItem>
                    <MenuItem Header="{x:Static locale:MainResources.Menu_Image_FolderClosed}">
                        <MenuItem
                            Style="{StaticResource ImportStyle}"
                            CommandParameter="{x:Static local:TargetImage.FolderClosed}" />
                        <MenuItem
                            Style="{StaticResource RemoveStyle}"
                            CommandParameter="{x:Static local:TargetImage.FolderClosed}" />
                        <MenuItem
                            Style="{StaticResource ExportStyle}"
                            CommandParameter="{x:Static local:TargetImage.FolderClosed}" />
                        <Separator />
                        <MenuItem
                            Header="64x128 (74x64)"
                            IsEnabled="False" />
                    </MenuItem>
                    <MenuItem Header="{x:Static locale:MainResources.Menu_Image_FolderOpen}">
                        <MenuItem
                            Style="{StaticResource ImportStyle}"
                            CommandParameter="{x:Static local:TargetImage.FolderOpen}" />
                        <MenuItem
                            Style="{StaticResource RemoveStyle}"
                            CommandParameter="{x:Static local:TargetImage.FolderOpen}" />
                        <MenuItem
                            Style="{StaticResource ExportStyle}"
                            CommandParameter="{x:Static local:TargetImage.FolderOpen}" />
                        <Separator />
                        <MenuItem
                            Header="64x128 (82x64)"
                            IsEnabled="False" />
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="{x:Static locale:MainResources.Menu_Image_LargeIcon}">
                        <MenuItem
                            Style="{StaticResource ImportStyle}"
                            CommandParameter="{x:Static local:TargetImage.LargeIcon}" />
                        <MenuItem
                            Style="{StaticResource RemoveStyle}"
                            CommandParameter="{x:Static local:TargetImage.LargeIcon}" />
                        <MenuItem
                            Style="{StaticResource ExportStyle}"
                            CommandParameter="{x:Static local:TargetImage.LargeIcon}" />
                        <Separator />
                        <MenuItem
                            Header="48x48"
                            IsEnabled="False" />
                    </MenuItem>
                    <MenuItem Header="{x:Static locale:MainResources.Menu_Image_SmallIcon}">
                        <MenuItem
                            Style="{StaticResource ImportStyle}"
                            CommandParameter="{x:Static local:TargetImage.SmallIcon}" />
                        <MenuItem
                            Style="{StaticResource RemoveStyle}"
                            CommandParameter="{x:Static local:TargetImage.SmallIcon}" />
                        <MenuItem
                            Style="{StaticResource ExportStyle}"
                            CommandParameter="{x:Static local:TargetImage.SmallIcon}" />
                        <Separator />
                        <MenuItem
                            Header="24x24"
                            IsEnabled="False" />
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Metadata">
                    <MenuItem Header="Export Colors" Command="{Binding Path=ExportMetadataCommand}" CommandParameter="Colors" />
                    <MenuItem Header="Export Flags" Command="{Binding Path=ExportMetadataCommand}" CommandParameter="Flags" />
                    <Separator />
                    <MenuItem Header="Import" Command="{Binding Path=ImportMetadataCommand}" />
                </MenuItem>
                <MenuItem Header="Experimental">
                    <MenuItem
                        Command="{Binding Path=CWavManagerCommand}"
                        Header="CWAV Manager" />
                </MenuItem>
                <MenuItem
                    Command="{Binding Path=AboutCommand}"
                    Header="{x:Static locale:MainResources.Menu_About}" />
            </Menu>
            <TabControl
                Grid.Row="1"
                markup:DragDropBehaviour.DragDropCommand="{Binding Path=DropThemeCommand}"
                markup:DragDropBehaviour.DragEnterCommand="{Binding Path=DragThemeCommand}"
                markup:DragDropBehaviour.DragOverCommand="{Binding Path=DragThemeCommand}"
                AllowDrop="True">
                <TabItem Header="{x:Static locale:MainResources.Tab_Info}">
                    <Grid Margin="3">
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="Padding" Value="2" />
                                <Setter Property="Margin" Value="3" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Padding" Value="2" />
                                <Setter Property="Margin" Value="3" />
                                <Setter Property="VerticalAlignment" Value="Top" />
                            </Style>
                            <Style TargetType="{x:Type controls:EyedropperEx}">
                                <Setter Property="Margin" Value="3" />
                                <Setter Property="Padding" Value="3" />
                                <Setter Property="VerticalAlignment" Value="Top" />
                                <Setter Property="HorizontalAlignment" Value="Left" />
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="102" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <!--  Author  -->
                        <TextBlock
                            Grid.Row="0"
                            Grid.Column="0"
                            Text="{x:Static locale:ThemeResources.Theme_Info_Author}" />
                        <TextBox
                            Grid.Row="0"
                            Grid.Column="1"
                            MaxLength="64"
                            Text="{Binding Path=ViewModel.Info.Author, UpdateSourceTrigger=PropertyChanged}" />
                        <!--  Short Descr  -->
                        <TextBlock
                            Grid.Row="1"
                            Grid.Column="0"
                            Text="{x:Static locale:ThemeResources.Theme_Info_ShortDesc}" />
                        <TextBox
                            Grid.Row="1"
                            Grid.Column="1"
                            MaxLength="64"
                            Text="{Binding Path=ViewModel.Info.ShortDescription, UpdateSourceTrigger=PropertyChanged}" />
                        <!--  Long Descr  -->
                        <TextBlock
                            Grid.Row="2"
                            Grid.Column="0"
                            Text="{x:Static locale:ThemeResources.Theme_Info_LongDesc}" />
                        <TextBox
                            Grid.Row="2"
                            Grid.Column="1"
                            AcceptsReturn="True"
                            HorizontalScrollBarVisibility="Auto"
                            MaxLength="128"
                            MaxLines="4"
                            MinLines="4"
                            Text="{Binding Path=ViewModel.Info.LongDescription, UpdateSourceTrigger=PropertyChanged}"
                            VerticalScrollBarVisibility="Visible" />
                        <!--  Icons  -->
                        <TextBlock
                            Grid.Row="3"
                            Grid.Column="0"
                            Text="{x:Static locale:ThemeResources.Theme_Info_LargeIcon}" />

                        <StackPanel
                            Grid.Row="3"
                            Grid.Column="1"
                            Orientation="Horizontal">
                            <Button
                                Margin="0,3"
                                FontFamily="Wingdings"
                                Command="{Binding Path=CopyResizeSMDHIconCommandCommand}"
                                Content="â">
                                <Button.CommandParameter>
                                    <system:Boolean>True</system:Boolean>
                                </Button.CommandParameter>
                            </Button>
                            <controls:EyedropperEx
                                HorizontalAlignment="Left"
                                BitmapFinal="{Binding Path=ViewModel.Info.LargeIcon.Bitmap}"
                                CaptureCenter="23,23"
                                CaptureSize="48,48" />
                        </StackPanel>

                        <TextBlock
                            Grid.Row="4"
                            Grid.Column="0"
                            Text="{x:Static locale:ThemeResources.Theme_Info_SmallIcon}" />

                        <StackPanel
                            Grid.Row="4"
                            Grid.Column="1"
                            Orientation="Horizontal">
                            <Button
                                Margin="0,3"
                                FontFamily="Wingdings"
                                Command="{Binding Path=CopyResizeSMDHIconCommandCommand}"
                                Content="á">
                                <Button.CommandParameter>
                                    <system:Boolean>False</system:Boolean>
                                </Button.CommandParameter>
                            </Button>
                            <controls:EyedropperEx
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                BitmapFinal="{Binding Path=ViewModel.Info.SmallIcon.Bitmap}"
                                CaptureCenter="11,11"
                                CaptureSize="24,24" />
                        </StackPanel>

                    </Grid>
                </TabItem>
                <TabItem Header="{x:Static locale:MainResources.Tab_Colors}">
                    <ScrollViewer HorizontalScrollBarVisibility="Hidden">
                        <ItemsControl
                            Style="{StaticResource ColorsViewModelControlStyle}"
                            ItemsSource="{Binding Path=ViewModel.Colors, Converter={StaticResource ViewModelUnroller}}" />
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static locale:MainResources.Tab_Flags}">
                    <ScrollViewer HorizontalScrollBarVisibility="Hidden">
                        <ItemsControl
                            Style="{StaticResource FlagsItemsControlStyle}"
                            ItemsSource="{Binding Path=ViewModel.Flags, Converter={StaticResource ViewModelUnroller}}" />
                    </ScrollViewer>
                </TabItem>
            </TabControl>
            <wpfx:BusyIndicator
                Grid.Row="1"
                BusyContent="{Binding Path=BusyText}"
                IsBusy="{Binding Path=IsBusy}" />
        </Grid>
        <!--  Preview  -->
        <Grid
            x:Name="grid_Preview"
            Grid.Column="1"
            Background="{StaticResource NoiseBackground}">
            <Grid.RowDefinitions>
                <RowDefinition Height="56" />
                <RowDefinition Height="240" />
                <RowDefinition Height="8" />
                <RowDefinition Height="240" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Border Grid.Row="1">
                <Canvas Width="412">
                    <controls:TopScreenPreview
                        x:Name="pre_TopScreen"
                        IsEnabled="{markup:Setting Path=Preview_AnimationToggle}"
                        Theme="{Binding Path=ViewModel}" />

                    <controls:TopFolderPreview
                        IsEnabled="{markup:Setting Path=Preview_AnimationToggle}"
                        ShowPreview="{markup:Setting Path=Preview_ModeToggle}"
                        Theme="{Binding Path=ViewModel}" />
                </Canvas>
                <Border.Effect>
                    <DropShadowEffect
                        BlurRadius="6"
                        ShadowDepth="0" />
                </Border.Effect>
            </Border>
            <Border Grid.Row="3">
                <Grid HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="320" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <StackPanel
                        Grid.Column="0"
                        Margin="6,0">
                        <TextBlock
                            HorizontalAlignment="Center"
                            Foreground="White"
                            Text="{x:Static locale:MainResources.Control_Preview_Label}" />
                        <Button
                            Margin="0,3"
                            Padding="3"
                            Command="{Binding PreviewOptionsCommand}"
                            Content="{x:Static locale:MainResources.Control_Preview_Options}" />
                        <ToggleButton
                            Margin="0,3"
                            Padding="3"
                            Content="{x:Static locale:MainResources.Control_Preview_Animate}"
                            IsChecked="{markup:Setting Path=Preview_AnimationToggle}" />
                        <ToggleButton
                            Margin="0,3"
                            Padding="3"
                            Content="{x:Static locale:MainResources.Control_Preview_Folder}"
                            IsChecked="{markup:Setting Path=Preview_ModeToggle}" />
                        <ToggleButton
                            Margin="0,3"
                            Padding="3"
                            Content="{x:Static locale:MainResources.Control_Preview_Pressed}"
                            IsChecked="{markup:Setting Path=Preview_PressedToggle}" />
                        <ToggleButton
                            Margin="0,3"
                            Padding="3"
                            Content="{x:Static locale:MainResources.Control_Preview_CloseButton}"
                            IsChecked="{markup:Setting Path=Preview_CloseToggle}" />
                    </StackPanel>
                    <Canvas
                        x:Name="pre_BottomScreen"
                        Grid.Column="1">
                        <controls:BottomScreenPreview
                            HideCursor="{markup:Setting Path=Preview_ModeToggle}"
                            IsEnabled="{markup:Setting Path=Preview_AnimationToggle}"
                            Theme="{Binding Path=ViewModel}" />
                        <controls:BottomFolderPreview
                            IsEnabled="{markup:Setting Path=Preview_AnimationToggle}"
                            ShowPreview="{markup:Setting Path=Preview_ModeToggle}"
                            Theme="{Binding Path=ViewModel}" />
                        <controls:BottomOverlaysPreview
                            IsEnabled="{markup:Setting Path=Preview_AnimationToggle}"
                            Theme="{Binding Path=ViewModel}" />
                    </Canvas>
                    <StackPanel
                        Grid.Column="2"
                        Margin="6,0">
                        <TextBlock
                            HorizontalAlignment="Center"
                            Foreground="White"
                            Text="BGM" />
                        <Button
                            Margin="0,3"
                            Padding="3"
                            Command="{Binding Path=ReloadBGMCommand}"
                            Content="{x:Static locale:MainResources.Control_AudioPlayer_Reload}" />
                        <Button
                            Margin="0,3"
                            Padding="3"
                            Command="{Binding Source={x:Static local:AudioPlayer.Instance}, Path=PlayCommand}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Content" Value="{x:Static locale:MainResources.Control_AudioPlayer_Play}" />
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding Source={x:Static local:AudioPlayer.Instance}, Path=IsPlaying, UpdateSourceTrigger=PropertyChanged}"
                                            Value="True">
                                            <Setter Property="Content" Value="{x:Static locale:MainResources.Control_AudioPlayer_Pause}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button
                            Margin="0,3"
                            Padding="3"
                            Command="{Binding Source={x:Static local:AudioPlayer.Instance}, Path=StopCommand}"
                            Content="{x:Static locale:MainResources.Control_AudioPlayer_Stop}" />
                        <Slider
                            Height="100"
                            Margin="0,3"
                            Padding="3"
                            HorizontalAlignment="Center"
                            AutoToolTipPlacement="BottomRight"
                            AutoToolTipPrecision="2"
                            Maximum="1"
                            Minimum="0"
                            Orientation="Vertical"
                            SmallChange="0.05"
                            Value="{Binding Source={x:Static local:AudioPlayer.Instance}, Path=Volume}" />
                    </StackPanel>
                </Grid>
                <Border.Effect>
                    <DropShadowEffect
                        BlurRadius="6"
                        ShadowDepth="0" />
                </Border.Effect>
            </Border>
            <StackPanel
                Grid.Row="0"
                HorizontalAlignment="Center"
                Orientation="Horizontal">
                <StackPanel.Resources>
                    <templating:StripStringUnderscoreCoverter x:Key="StripStringUnderscoreCoverter" />
                    <Style
                        BasedOn="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"
                        TargetType="Separator" />
                    <Style
                        BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        TargetType="Button">
                        <Setter Property="Width" Value="48" />
                        <Setter Property="Height" Value="48" />
                        <Setter Property="Command" Value="{Binding Path=ReplaceImageCommand}" />
                        <Setter Property="AllowDrop" Value="True" />
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="markup:DragDropBehaviour.DragEnterCommand" Value="{Binding Path=DragImageCommand}" />
                        <Setter Property="markup:DragDropBehaviour.DragOverCommand" Value="{Binding Path=DragImageCommand}" />
                    </Style>
                </StackPanel.Resources>
                <Button
                    markup:DragDropBehaviour.DragDropCommand="{Binding Path=DropTopImageCommand}"
                    CommandParameter="{x:Static local:TargetImage.Top}"
                    ToolTip="{Binding Source={x:Static locale:MainResources.Menu_Image_Top}, Converter={StaticResource StripStringUnderscoreCoverter}}">
                    <Image Source="/ThemeEditor.WPF;component/Resources/DROP_TOP.png" 
                           Opacity="{Binding Path=ViewModel.Textures.Top.Exists, Converter={StaticResource BooleanToOpacityConverter}}" />
                </Button>
                <Button
                    markup:DragDropBehaviour.DragDropCommand="{Binding Path=DropTopAltImageCommand}"
                    CommandParameter="{x:Static local:TargetImage.TopAlt}"
                    ToolTip="{Binding Source={x:Static locale:MainResources.Menu_Image_TopStatic}, Converter={StaticResource StripStringUnderscoreCoverter}}">
                    <Image Source="/ThemeEditor.WPF;component/Resources/DROP_TOPALT.png"
                           Opacity="{Binding Path=ViewModel.Textures.TopAlt.Exists, Converter={StaticResource BooleanToOpacityConverter}}" />
                </Button>
                <Button
                    markup:DragDropBehaviour.DragDropCommand="{Binding Path=DropBottomImageCommand}"
                    CommandParameter="{x:Static local:TargetImage.Bottom}"
                    ToolTip="{Binding Source={x:Static locale:MainResources.Menu_Image_Bottom}, Converter={StaticResource StripStringUnderscoreCoverter}}">
                    <Image Source="/ThemeEditor.WPF;component/Resources/DROP_BOTTOM.png"
                           Opacity="{Binding Path=ViewModel.Textures.Bottom.Exists, Converter={StaticResource BooleanToOpacityConverter}}"/>
                </Button>
                <Separator />
                <Button
                    markup:DragDropBehaviour.DragDropCommand="{Binding Path=DropFileLargeImageCommand}"
                    CommandParameter="{x:Static local:TargetImage.FileLarge}"
                    ToolTip="{Binding Source={x:Static locale:MainResources.Menu_Image_FileLarge}, Converter={StaticResource StripStringUnderscoreCoverter}}">
                    <Image Source="/ThemeEditor.WPF;component/Resources/DROP_FILELARGE.png"
                           Opacity="{Binding Path=ViewModel.Textures.FileLarge.Exists, Converter={StaticResource BooleanToOpacityConverter}}"/>
                </Button>
                <Button
                    markup:DragDropBehaviour.DragDropCommand="{Binding Path=DropFileSmallImageCommand}"
                    CommandParameter="{x:Static local:TargetImage.FileSmall}"
                    ToolTip="{Binding Source={x:Static locale:MainResources.Menu_Image_FileSmall}, Converter={StaticResource StripStringUnderscoreCoverter}}">
                    <Image Source="/ThemeEditor.WPF;component/Resources/DROP_FILESMALL.png"
                           Opacity="{Binding Path=ViewModel.Textures.FileSmall.Exists, Converter={StaticResource BooleanToOpacityConverter}}"/>
                </Button>
                <Button
                    markup:DragDropBehaviour.DragDropCommand="{Binding Path=DropFolderClosedImageCommand}"
                    CommandParameter="{x:Static local:TargetImage.FolderClosed}"
                    ToolTip="{Binding Source={x:Static locale:MainResources.Menu_Image_FolderClosed}, Converter={StaticResource StripStringUnderscoreCoverter}}">
                    <Image Source="/ThemeEditor.WPF;component/Resources/DROP_FOLDERCLOSED.png"
                           Opacity="{Binding Path=ViewModel.Textures.FolderClosed.Exists, Converter={StaticResource BooleanToOpacityConverter}}"/>
                </Button>
                <Button
                    markup:DragDropBehaviour.DragDropCommand="{Binding Path=DropFolderOpenImageCommand}"
                    CommandParameter="{x:Static local:TargetImage.FolderOpen}"
                    ToolTip="{Binding Source={x:Static locale:MainResources.Menu_Image_FolderOpen}, Converter={StaticResource StripStringUnderscoreCoverter}}">
                    <Image Source="/ThemeEditor.WPF;component/Resources/DROP_FOLDEROPEN.png"
                           Opacity="{Binding Path=ViewModel.Textures.FolderOpen.Exists, Converter={StaticResource BooleanToOpacityConverter}}"/>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</Window>